on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: test-script


env:
  cache-version: 'cache-v1'

jobs:
  ## This first job uses the GitHub repository branch name to infer what
  ## version of Bioconductor we will be working on.
  define-docker-info:
    runs-on: ubuntu-latest
    outputs:
      imagename: ${{ steps.findinfo.outputs.imagename }}
      biocversion: ${{ steps.findinfo.outputs.biocversion }}
    steps:
      - id: findinfo
        run: |
          biocversion="release"
          imagename="bioconductor/bioconductor_docker:${biocversion}"
          echo $imagename
          echo $biocversion

          ## Save the information for the next job
          echo "::set-output name=imagename::${imagename}"
          echo "::set-output name=biocversion::${biocversion}"

  linux-R-stable:
    ## This job then checks the R package using the Bioconductor docker that
    ## was defined by the previous job. This job will determine what version of
    ## R to use for the macOS and Windows builds on the next job.
    runs-on: ubuntu-latest
    needs: define-docker-info

    ## Name shown on the GHA log
    name: ubuntu-latest

    ## Information used by the next job that will run on macOS and Windows
    outputs:
      biocversionnum: ${{ steps.findrversion.outputs.biocversionnum }}

    ## Environment variables unique to this job.
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      TZ: UTC
      NOT_CRAN: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    ## The docker container to use. Note that we link a directory on the GHA
    ## runner to a docker directory, such that we can then cache the linked
    ## directory. This directory will contain the R packages used.
    #container:
    #  image: ${{ needs.define-docker-info.outputs.imagename }}
    #  volumes:
    #    - /home/runner/work/_temp/Library:/usr/local/lib/R/host-site-library

    steps:
      - name: Install latest git
        run: |
          ## git version provided
          git --version
          ## to be able to install software properties
          sudo apt-get update -y
          ## to be able to use add-apt-repository
          sudo apt-get install software-properties-common -y
          ## to use stable releases of git that are already in a PPA at
          ## https://launchpad.net/~git-core/+archive/ubuntu/candidate
          sudo add-apt-repository ppa:git-core/candidate -y
          ## Update
          sudo apt-get update -y
          ## Upgrade git and other tools
          sudo apt-get upgrade -y
          ## latest git version
          git --version
        shell: bash {0}
      ## Related to https://github.com/rocker-org/rocker-versioned2/issues/52

      ## Most of these steps are the same as the ones in
      ## https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
      ## If they update their steps, we will also need to update ours.
      - uses: actions/checkout@v2      
      
      - name: Install dependencies
        run: |
          sudo apt-get install libcurl4-openssl-dev libglpk-dev libmagick++-dev

      - uses: r-lib/actions/setup-r@master

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-biocdocker-biocbranch-${{ needs.define-docker-info.outputs.biocversion }}-r-${{ steps.findrversion.outputs.rversion }}-bioc-${{ steps.findrversion.outputs.biocversionnum }}-results
          path: check

  R-CMD-check-r-lib:
    runs-on: ${{ matrix.config.os }}
    needs: [define-docker-info, linux-R-stable]

    name: ${{ matrix.config.os }}-R-stable

    strategy:
      fail-fast: false
      matrix:
        config:
          ## Comment/Un-comment in case you also want to run other versions
          - {os: windows-latest}
          - {os: macOS-latest}
          # - {os: ubuntu-16.04, rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup R from r-lib
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ needs.R-CMD-check-bioc.outputs.rversion }}

      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install macOS system dependencies
        if: matrix.config.os == 'macOS-latest'
        run: |
          ## Enable installing XML from source if needed
          brew install libxml2
          echo "::set-env name=XML_CONFIG::/usr/local/opt/libxml2/bin/xml2-config"

          ## Required to install magick as noted at
          ## https://github.com/r-lib/usethis/commit/f1f1e0d10c1ebc75fd4c18fa7e2de4551fd9978f#diff-9bfee71065492f63457918efcd912cf2
          brew install imagemagick@6

      - name: Install Windows system dependencies
        if: runner.os == 'Windows'
        run: |
          ## Edit below if you have any Windows system dependencies
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-biocbranch-${{ needs.define-docker-info.outputs.biocversion }}-r-${{ needs.R-CMD-check-bioc.outputs.rversion }}-bioc-${{ needs.define-docker-info.outputs.biocversion }}-results
          path: check
